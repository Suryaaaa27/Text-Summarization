<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Text Summarizer</title>
    <link rel="stylesheet" href="styles.css">
    <script defer src="script.js"></script>
</head>
<style>
    /* General Styling */
body {
font-family: Arial, sans-serif;
background-color: #f4f4f4;
text-align: center;
margin: 0;
padding: 20px;
}

/* Container */
.container {
max-width: 600px;
background: white;
padding: 20px;
margin: auto;
box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
border-radius: 10px;
}

/* Headings */
h1 {
color: #333;
}

/* Textarea */
textarea {
width: 100%;
height: 100px;
padding: 10px;
margin-bottom: 10px;
border: 1px solid #ccc;
border-radius: 5px;
resize: none;
}

/* Buttons */
button {
background-color: #007bff;
color: white;
border: none;
padding: 10px 15px;
margin: 5px;
cursor: pointer;
border-radius: 5px;
}

button:hover {
background-color: #0056b3;
}

/* Disabled button */
button:disabled {
background-color: #ccc;
cursor: not-allowed;
}

/* Loading animation */
.hidden {
display: none;
}

/* Stats */
.stats {
margin-bottom: 10px;
font-size: 14px;
color: #666;
}

/* Summary Length Slider */
input[type="range"] {
width: 100%;
margin-bottom: 10px;
}

</style>
<body>
    <div class="container">
        <h1>AI Text Summarizer</h1>

        <label for="inputText">Enter your text:</label>
        <textarea id="inputText" placeholder="Paste or type your text here..."></textarea>

        <div class="stats">
            <span>Words: <span id="wordCount">0</span></span> |
            <span>Characters: <span id="charCount">0</span></span>
        </div>

        <input type="file" id="fileInput" accept=".txt">
        <button id="voiceInputBtn">üé§ Voice Input</button>
        <button id="clearTextBtn">üßπ Clear</button>

        <label for="summaryLength">Summary Length: <span id="summaryPercentage">50%</span></label>
        <input type="range" id="summaryLength" min="30" max="150" value="50">

        <button id="summarizeBtn">Summarize</button>
        <div id="loading" class="hidden">‚è≥ Summarizing...</div>

        <label for="outputText">Summary:</label>
        <textarea id="outputText" readonly></textarea>

        <div class="stats">
            <span>Summary Words: <span id="summaryWordCount">0</span></span>
        </div>

        <button id="copyBtn">üìã Copy</button>
        <button id="downloadBtn">‚¨á Download</button>
        <button id="textToSpeechBtn">üîä Listen</button>
    </div>
<script>
document.addEventListener("DOMContentLoaded", function () {
    const inputText = document.getElementById("inputText");
    const wordCount = document.getElementById("wordCount");
    const charCount = document.getElementById("charCount");
    const summaryWordCount = document.getElementById("summaryWordCount");
    const summarizeBtn = document.getElementById("summarizeBtn");
    const loading = document.getElementById("loading");
    const outputText = document.getElementById("outputText");
    const copyBtn = document.getElementById("copyBtn");
    const downloadBtn = document.getElementById("downloadBtn");
    const fileInput = document.getElementById("fileInput");
    const voiceInputBtn = document.getElementById("voiceInputBtn");
    const textToSpeechBtn = document.getElementById("textToSpeechBtn");
    const summaryLength = document.getElementById("summaryLength");
    const summaryPercentage = document.getElementById("summaryPercentage");
    const clearTextBtn = document.getElementById("clearTextBtn");

    // Update word and character count for input text
    inputText.addEventListener("input", function () {
        wordCount.textContent = inputText.value.split(/\s+/).filter(word => word).length;
        charCount.textContent = inputText.value.length;
    });

    // Update summary length percentage
    summaryLength.addEventListener("input", function () {
        summaryPercentage.textContent = summaryLength.value + "%";
    });

    // Fetch summary from Flask backend
    summarizeBtn.addEventListener("click", function () {
        const text = inputText.value.trim();
        if (text === "") {
            alert("Please enter text to summarize.");
            return;
        }

        outputText.value = "Generating summary... Please wait.";
        loading.classList.remove("hidden");

        fetch("http://127.0.0.1:5000/summarize", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ text: text, length: summaryLength.value })
        })
        .then(response => response.json())
        .then(data => {
            outputText.value = data.summary || "Failed to generate summary.";
            summaryWordCount.textContent = data.summary.split(/\s+/).filter(word => word).length;
            loading.classList.add("hidden");
        })
        .catch(error => {
            console.error("Error:", error);
            outputText.value = "An error occurred while summarizing.";
            loading.classList.add("hidden");
        });
    });

    // Copy summary to clipboard
    copyBtn.addEventListener("click", function () {
        outputText.select();
        document.execCommand("copy");
        alert("Summary copied to clipboard!");
    });

    // Download summary as a text file
    downloadBtn.addEventListener("click", function () {
        const summaryText = outputText.value;
        if (!summaryText) {
            alert("No summary to download!");
            return;
        }
        const blob = new Blob([summaryText], { type: "text/plain" });
        const link = document.createElement("a");
        link.href = URL.createObjectURL(blob);
        link.download = "summary.txt";
        link.click();
    });

    // Voice Input (Speech-to-Text)
    voiceInputBtn.addEventListener("click", function () {
        const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
        recognition.start();
        recognition.onresult = function (event) {
            inputText.value = event.results[0][0].transcript;
            wordCount.textContent = inputText.value.split(/\s+/).filter(word => word).length;
            charCount.textContent = inputText.value.length;
        };
    });

    // Text-to-Speech (TTS)
    textToSpeechBtn.addEventListener("click", function () {
        if (!outputText.value.trim()) {
            alert("No summary available to read.");
            return;
        }
        const utterance = new SpeechSynthesisUtterance(outputText.value);
        speechSynthesis.speak(utterance);
    });

    // Clear text
    clearTextBtn.addEventListener("click", function () {
        inputText.value = "";
        outputText.value = "";
        wordCount.textContent = "0";
        charCount.textContent = "0";
        summaryWordCount.textContent = "0";
    });
});

</script>
</body>
</html>
